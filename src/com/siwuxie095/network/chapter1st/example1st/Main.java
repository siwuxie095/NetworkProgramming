package com.siwuxie095.network.chapter1st.example1st;

/**
 * @author Jiajing Li
 * @date 2020-11-03 21:31:40
 */
public class Main {

    /**
     * Netty：异步和事件驱动
     *
     * 有这样一个例子：假设你正在为一个重要的大型公司开发一款全新的任务关键型的应用程序。在第一次会议上，你得知该系统必须要
     * 能够扩展到支撑 150 000 名并发用户，并且不能有任何的性能损失，这时所有的目光都投向了你。你会怎么说呢？如果你可以自信
     * 地说 "当然，没问题。"，那么大家会向你脱帽致敬。但是，大多数人可能会采取一个更加谨慎的立场，例如 "听上去是可行的。"，
     * 然后，一回到计算机旁，便会开始搜索 "high performance Java networking"（高性能 Java 网络编程）。
     *
     * 在第一页搜索结果中，Netty 便会跃入眼帘，其介绍如下：
     *
     * Netty 是一款异步的事件驱动的网络应用程序框架，支持快速地开发可维护的高性能的面向协议的服务器和客户端。
     *
     * PS：Netty 官网链接：https://netty.io/
     *
     * 如果你和大多数人一样，通过这样的方式发现了 Netty，那么你的下一步多半是：浏览该网站，下载源代码，仔细阅读 Javadoc
     * 和一些相关的博客，然后写点儿代码试试。如果你已经有了扎实的网络编程经验，那么可能进展还不错，不然则可能是一头雾水。
     *
     * 这是为什么呢？因为像例子中那样的高性能系统不仅要求超一流的编程技巧，还需要几个复杂领域（网络编程、多线程处理和并发）
     * 的专业知识。Netty 优雅地处理了这些领域的知识，使得即使是网络编程新手也能使用。但到目前为止，由于还缺乏一份全面的指南，
     * 使得对它的学习过程比实际需要的艰涩得多。（即 对整体的学习比实际需要的那部分要艰涩的多。）
     *
     * 所以这里的主要目的是：使得 Netty 能够尽可能多地被更加广泛的开发者采用。这也包括那些拥有创新的内容或服务，却没有时间
     * 或兴趣成为网络编程专家的人。如果这适用于你，相信你将会非常惊讶自己这么快便可以创建你的第一款基于 Netty 的应用程序了。
     * 当然，从另一个层面上讲，也需要支持那些正在寻找工具来创建他们自己的网络协议的高级从业人员。
     *
     * Netty 确实提供了极为丰富的网络编程工具集，这里将花大部分的时间来探究它的能力。但是，Netty 终究是一个框架，它的架构
     * 方法和设计原则是：每个小点都和它的技术性内容一样重要，并穷其精妙。因此，这里也将探讨很多其他方面的内容，例如：
     *
     * （1）关注点分离：业务和网络逻辑解耦；
     * （2）模块化和可复用性；
     * （3）可测试性作为首要的要求。
     *
     * 这里将从一些与高性能网络编程相关的背景知识开始铺陈，特别是它在 Java开发工具包（JDK）中的实现。有了这些背景知识后，
     * 将介绍 Netty 的核心概念以及构件块。
     */
    public static void main(String[] args) {

    }

}
