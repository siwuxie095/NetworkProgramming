package com.siwuxie095.network.chapter13th.example2nd;

/**
 * @author Jiajing Li
 * @date 2020-12-01 21:29:03
 */
public class Main {

    /**
     * UDP 的基础知识
     *
     * 面向连接的传输（如 TCP）管理了两个网络端点之间的连接的建立，在连接的生命周期内的有序和可靠的消息传输，以及最后，
     * 连接的有序终止。相比之下，在类似于 UDP 这样的无连接协议中，并没有持久化连接这样的概念，并且每个消息（一个 UDP
     * 数据报）都是一个单独的传输单元。
     *
     * 此外，UDP 也没有 TCP 的纠错机制，其中每个节点都将确认它们所接收到的包，而没有被确认的包将会被发送方重新传输。
     *
     * 通过类比，TCP 连接就像打电话，其中一系列的有序消息将会在两个方向上流动。相反，UDP 则类似于往邮箱中投入一叠明信
     * 片。你无法知道它们将以何种顺序到达它们的目的地，或者它们是否所有的都能够到达它们的目的地。
     *
     * UDP 的这些方面可能会让你感觉到严重的局限性，但是它们也解释了为何它会比 TCP 快那么多：所有的握手以及消息管理机
     * 制的开销都已经被消除了。显然，UDP 很适合那些能够处理或者容忍消息丢失的应用程序，但可能不适合那些处理金融交易的
     * 应用程序（基于 UDP 协议实现的一些可靠传输协议可能不在此范畴内，如 Quic、Aeron 和 UDT）。
     */
    public static void main(String[] args) {

    }

}
