package com.siwuxie095.network.chapter14th.example19th;

/**
 * @author Jiajing Li
 * @date 2020-12-05 13:21:36
 */
public class Main {

    /**
     * 直接面向设备的递交
     *
     * 将消息递交到设备有两种方式。除了通过第三方来递交消息之外，Urban Airship 还有直接作为消息递交通道的经验。
     * 在作为这种角色时，单个设备将直接连接 Urban Airship 的基础设施，绕过第三方提供商。这种方式也带来了一组
     * 截然不同的挑战。
     * （1）由移动设备发出的套接字连接往往是短暂的。根据不同的条件，移动设备将频繁地在不同类型的网络之间进行切换。
     * 对于移动服务的后端提供商来说，设备将不断地重新连接，并将感受到短暂而又频繁的连接周期。
     * （2）跨平台的连接性是不规则的。从网络的角度来看，平板设备的连接性往往表现得和移动电话不一样，而对比于台式
     * 计算机，移动电话的连接性的表现又不一样。
     * （3）移动电话向后端服务提供商更新的频率一定会增加。移动电话越来越多地被应用于日常任务中，不仅产生了大量常
     * 规的网络流量，而且也为后端服务提供商提供了大量的分析数据。
     * （4）电池和带宽不能被忽略。不同于传统的桌面环境，移动电话通常使用有限的数据流量包。服务提供商必须要尊重最
     * 终用户只有有限的电池使用时间，而且他们使用昂贵的、速率有限的（蜂窝移动数据网络）带宽这一事实。滥用两者之一
     * 都通常会导致应用被卸载，这对于移动开发人员来说可能是最坏的结果了。
     * （5）基础设施的所有方面都需要大规模的伸缩。随着移动设备普及程度的不断增加，更多的应用程序安装量将会导致更
     * 多的到移动服务的基础设施的连接。由于移动设备的庞大规模和增长，这个列表中的每一个前面提到的元素都将变得愈加
     * 复杂。
     *
     * 随着时间的推移，Urban Airship 从移动设备的不断增长中学到了几点关键的经验教训：
     * （1）移动运营商的多样性可以对移动设备的连接性造成巨大的影响；
     * （2）许多运营商都不允许 TCP 的 keep-alive 特性，因此许多运营商都会积极地剔除空闲的 TCP 会话；
     * （3）UDP 不是一个可行的向移动设备发送消息的通道，因为许多的运营商都禁止它；
     * （4）SSLv3 所带来的开销对于短暂的连接来说是巨大的痛苦。
     *
     * 鉴于移动增长的挑战，以及 Urban Airship 的经验教训，Netty 对于实现一个移动消息平台来说简直就是天作之合，
     * 原因将在后续进行强调和说明。
     */
    public static void main(String[] args) {

    }

}
