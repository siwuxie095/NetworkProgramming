package com.siwuxie095.network.chapter14th.example8th;

/**
 * @author Jiajing Li
 * @date 2020-12-04 22:09:20
 */
public class Main {

    /**
     * Droplr 小结：站在巨人的肩膀上
     *
     * 所有的这一切能够成为可能，都得益于 Netty 的难以置信的精心设计的 API，以及高性能的非阻塞的 I/O 架构。
     *
     * 自 2011 年 12 月推出 Droplr 2.0 以来，他们在 API 级别的宕机时间几乎为零。在几个月前，由于一次既定
     * 的全栈升级（数据库、操作系统、主要的服务器和守护进程的代码库升级），他们中断了已经连续一年半安静运行的
     * 基础设施的 100% 正常运行时间，这次升级只耗费了不到 1 小时的时间。
     *
     * 这些服务器日复一日地坚挺着，每秒钟处理几百个（有时甚至是几千个）并发请求，而同时还保持了如此低的内存和
     * CPU 使有率，以至于他们都难以相信它们实际上正在真实地做着如此大量的工作：
     * （1）CPU 使用率很少超过 5%；
     * （2）无法准确地描述内存使用率，因为进程启动时预分配了 1 GB 的内存，同时配置的 JVM 可以在必要时增长到
     * 2 GB，而在过去的两年内这一次也没有发生过。
     *
     * 任何人都可以通过增加机器来解决某个特定的问题，然而 Netty 帮助了 Droplr 智能地伸缩，并且保持了相当低
     * 的服务器账单。
     */
    public static void main(String[] args) {

    }

}
