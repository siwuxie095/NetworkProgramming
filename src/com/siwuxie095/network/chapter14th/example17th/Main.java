package com.siwuxie095.network.chapter14th.example17th;

/**
 * @author Jiajing Li
 * @date 2020-12-05 12:30:22
 */
public class Main {

    /**
     * 第三方递交
     *
     * 在第三方推送递交的情况下，每个推送通知平台都为开发者提供了一个不同的 API，来将消息递交给应用程序安装。
     * 这些 API 有着不同的协议（基于二进制的或者基于文本的）、身份验证（OAuth、X.509 等）以及能力。对于集
     * 成它们并且达到最佳的吞吐量，每种方式都有着其各自不同的挑战。
     *
     * 尽管事实上每个这些提供商的根本目的都是向应用程序递交通知消息，但是它们各自又都采取了不同的方式，这对
     * 系统集成商造成了重大的影响。例如，苹果公司的 Apple 推送通知服务（APNS）定义了一个严格的二进制协议，
     * 而其他的提供商则将它们的服务构建在了某种形式的 HTTP 之上，所有的这些微妙变化都影响了如何以最佳的方式
     * 达到最大的吞吐量。值得庆幸的是，Netty 是一个灵活得令人惊奇的工具，它为消除不同协议之间的差异提供了极
     * 大的帮助。
     *
     * 后续将提供 Urban Airship 是如何使用 Netty 来集成两个上面所列出的服务提供商的例子。
     */
    public static void main(String[] args) {

    }

}
