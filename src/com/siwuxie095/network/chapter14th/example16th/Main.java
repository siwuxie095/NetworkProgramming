package com.siwuxie095.network.chapter14th.example16th;

/**
 * @author Jiajing Li
 * @date 2020-12-05 12:24:04
 */
public class Main {

    /**
     * 移动消息的基础知识
     *
     * 虽然市场人员长期以来都使用 SMS 来作为一种触达移动设备的通道，但是最近一种被称为推送通知的功能正在
     * 迅速地成为向智能手机发送消息的首选机制。推送通知通常使用较为便宜的数据通道，每条消息的价格只是 SMS
     * 费用的一小部分。推送通知的吞吐量通常都比 SMS 高 2~3 个数量级，所以它成为了突发新闻的理想通道。最
     * 重要的是，推送通知为用户提供了设备驱动的对推送通道的控制。如果一个用户不喜欢某个应用程序的通知消息，
     * 那么用户可以禁用该应用程序的通知，或者干脆删除该应用程序。
     *
     * 在高级别上，当应用程序开发人员想要发送推送通知给某台设备时，开发人员必须要考虑存储有关设备及其应用
     * 程序安装的信息（PS：某些移动操作系统允许一种被称为本地推送的推送通知，可能不会遵循这种做法）。通常，
     * 应用程序的安装都将会执行代码以检索一个平台相关的标识符，并且将该标识符上报给一个持久化该标识符的中
     * 心化服务。稍后，应用程序安装之外的逻辑将会发起一个请求以向该设备投递一条消息。
     *
     * 一旦一个应用程序的安装已经将它的标识符注册到了后端服务，那么推送消息的递交就可以反过来采取两种方式。
     * 在第一种方式中，使用应用程序维护一条到后端服务的直接连接，消息可以被直接递交给应用程序本身。第二种
     * 方式更加常见，在这种方式中，应用程序将依赖第三方代表该后端服务来将消息递交给应用程序。
     *
     * 在 Urban Airship，这两种递交推送通知的方式都有使用，而且也都大量地使用了 Netty。
     */
    public static void main(String[] args) {

    }

}
