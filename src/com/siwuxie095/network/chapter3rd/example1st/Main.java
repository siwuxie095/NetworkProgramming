package com.siwuxie095.network.chapter3rd.example1st;

/**
 * @author Jiajing Li
 * @date 2020-11-08 17:41:10
 */
public class Main {

    /**
     * Netty 的组件和设计
     *
     * 这里将从两个不同却又密切相关的视角来探讨 Netty：类库的视角以及框架的视角。对于使用 Netty 编写高效的、
     * 可重用的和可维护的代码来说，两者缺一不可。
     *
     * 从高层次的角度来看，Netty 解决了两个相应的关注领域，这里可将其大致标记为技术的和体系结构的。首先，它的
     * 基于 Java NIO 的异步和事件驱动的实现，保证了高负载下应用程序性能的最大化和可伸缩性。其次，Netty 也包
     * 含了一组设计模式，将应用程序逻辑从网络层解耦，简化了开发过程，同时也最大限度地提高了可测试性、模块化以及
     * 代码的可重用性。
     *
     * 在更加详细地研究 Netty 的各个组件时，将密切关注它们是如何通过协作来支撑这些体系结构上的最佳实践的。通过
     * 遵循同样的原则，便可以获得 Netty 所提供的所有益处。
     */
    public static void main(String[] args) {

    }

}
